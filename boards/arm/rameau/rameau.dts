/dts-v1/;
#include <st/u0/stm32u073Xc.dtsi>
#include <st/u0/stm32u073cctx-pinctrl.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>
#include <zephyr/dt-bindings/adc/adc.h>
#include <zephyr/dt-bindings/adc/stm32l4_adc.h>

/ {
    model = "Rameau Board";
    compatible = "GK,rameau";

    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
        zmk,hall-effect = &hall_effect_config;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <3>;
        rows = <3>;
        map = <
        RC(0,0) RC(0,1) RC(0,2)
        RC(1,0) RC(1,1) RC(1,2)
        RC(2,0) RC(2,1) RC(2,2)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        row-gpios
        = <&gpioa 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 1 (ADC1_IN8)
        , <&gpiob 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 2 (ADC1_IN18)
        , <&gpiob 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 3 (ADC1_IN17)
        ;

        col-gpios
        = <&gpioa 9 GPIO_ACTIVE_HIGH>   // Col 1
        , <&gpioa 15 GPIO_ACTIVE_HIGH>  // Col 2
        , <&gpiob 3 GPIO_ACTIVE_HIGH>   // Col 3
        ;
    };

    hall_effect_config: hall_effect {
        compatible = "gk,hall-effect";
        matrix = <&kscan0>;
        startup-time-us = <50>;
        discovery-sample-rate-hz = <100>;
        
        // Map sense pins to ADC channels - sparse array matching matrix indices
        adc-channels = <&adc1_ch8>, <&adc1_ch18>, <&adc1_ch17>;
        
        // Pinctrl states: pinctrl-0 is default, pinctrl-N is for sense pin N
        pinctrl-0 = <&gpio_mode>;      // Default: all pins in GPIO mode
        pinctrl-1 = <&adc_sense1>;     // Sense pin 0 (PA4) in ADC mode
        pinctrl-2 = <&adc_sense2>;     // Sense pin 1 (PB1) in ADC mode
        pinctrl-3 = <&adc_sense3>;     // Sense pin 2 (PB0) in ADC mode
    };
};

// Configure ADC1 with channels for hall effect sensing
&adc1 {
    #address-cells = <1>;
    #size-cells = <0>;
    status = "okay";
    
    // PA4 - ADC1_IN8
    adc1_ch8: channel@8 {
        reg = <8>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
        zephyr,resolution = <12>;
        // Note: No pinctrl here - managed by hall effect driver
    };
    
    // PB0 - ADC1_IN17  
    adc1_ch17: channel@17 {
        reg = <17>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
        zephyr,resolution = <12>;
    };
    
    // PB1 - ADC1_IN18
    adc1_ch18: channel@18 {
        reg = <18>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
        zephyr,resolution = <12>;
    };
};

&pinctrl {
    // Combined GPIO mode for all ADC-capable sense pins
    gpio_mode: gpio_mode {
        group1 {
            pinmux = <STM32_PINMUX('A', 4, GPIO)>,
                     <STM32_PINMUX('B', 1, GPIO)>,
                     <STM32_PINMUX('B', 0, GPIO)>;
            bias-pull-down;
        };
    };
    
    // Individual ADC modes for each sense pin (starting at 1)
    // Only one pin switches to ADC at a time
    adc_sense1: adc_sense1 {
        group1 {
            pinmux = <STM32_PINMUX('A', 4, ANALOG)>;  // Sense 1 to ADC
        };
        group2 {
            pinmux = <STM32_PINMUX('B', 1, GPIO)>,    // Others stay GPIO
                     <STM32_PINMUX('B', 0, GPIO)>;
            bias-pull-down;
        };
    };
    
    adc_sense2: adc_sense2 {
        group1 {
            pinmux = <STM32_PINMUX('B', 1, ANALOG)>;  // Sense 2 to ADC
        };
        group2 {
            pinmux = <STM32_PINMUX('A', 4, GPIO)>,    // Others stay GPIO
                     <STM32_PINMUX('B', 0, GPIO)>;
            bias-pull-down;
        };
    };
    
    adc_sense3: adc_sense3 {
        group1 {
            pinmux = <STM32_PINMUX('B', 0, ANALOG)>;  // Sense 3 to ADC
        };
        group2 {
            pinmux = <STM32_PINMUX('A', 4, GPIO)>,    // Others stay GPIO
                     <STM32_PINMUX('B', 1, GPIO)>;
            bias-pull-down;
        };
    };
};

&usb {
    pinctrl-0 = <&usb_dm_pa11 &usb_dp_pa12>;
    pinctrl-names = "default";
    status = "okay";
};

&rcc {
    clock-frequency = <DT_FREQ_M(16)>;
    ahb-prescaler = <1>;
    apb1-prescaler = <1>;
};