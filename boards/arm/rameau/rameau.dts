/dts-v1/;
#include <st/u0/stm32u073Xc.dtsi>
#include <st/u0/stm32u073cctx-pinctrl.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>

/ {
    model = "Rameau Board";
    compatible = "GK,rameau";

    chosen {
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
        zmk,hall-effect = &hall_effect_config;
        zephyr,console = &usart2;
        zephyr,shell-uart = &usart2;
        zephyr,bt-hci = &bt_hci_uart;
        zephyr,bt-uart = &lpuart3;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <3>;
        rows = <3>;
        map = <
        RC(0,0) RC(0,1) RC(0,2)
        RC(1,0) RC(1,1) RC(1,2)
        RC(2,0) RC(2,1) RC(2,2)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";

        row-gpios
        = <&gpioa 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 1 (ADC1_IN8)
        , <&gpiob 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 2 (ADC1_IN18)
        , <&gpiob 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // Row 3 (ADC1_IN17)
        ;

        col-gpios
        = <&gpioa 9 GPIO_ACTIVE_HIGH>   // Col 1
        , <&gpioa 15 GPIO_ACTIVE_HIGH>  // Col 2
        , <&gpiob 3 GPIO_ACTIVE_HIGH>   // Col 3
        ;
    };

    hall_effect_config: hall_effect {
        compatible = "gk,hall-effect";
        matrix = <&kscan0>;
        startup-time-us = <50>;
        discovery-sample-rate-hz = <100>;
        
        // Map sense pins to ADC channels - sparse array matching matrix indices
        io-channels = <&adc1 8>, <&adc1 18>, <&adc1 17>;
        
        // Pinctrl states: pinctrl-0 is default, pinctrl-N is for sense pin N
        pinctrl-0 = <&pa4_gpio &pb1_gpio &pb0_gpio>;          // Default: all pins in GPIO mode
        pinctrl-1 = <&adc1_in8_pa4 &pb1_gpio &pb0_gpio>;      // Sense pin 0 (PA4) in ADC mode
        pinctrl-2 = <&pa4_gpio &adc1_in18_pb1 &pb0_gpio>;     // Sense pin 1 (PB1) in ADC mode
        pinctrl-3 = <&pa4_gpio &pb1_gpio &adc1_in17_pb0>;     // Sense pin 2 (PB0) in ADC mode
        pinctrl-names = "gpio", "sense1", "sense2", "sense3";
    };

    soc {
        lpuart3: serial@40008c00 {
            compatible = "st,stm32-lpuart", "st,stm32-uart";
            reg = <0x40008c00 0x400>;
            clocks = <&rcc STM32_CLOCK(APB1, 12U)>;
            resets = <&rctl STM32_RESET(APB1L, 12U)>;
            interrupts = <30 0>;
            status = "disabled";
            
            bt_hci_uart: bt_hci_uart {
                compatible = "zephyr,bt-hci-uart";
                status = "okay";
            };
        };
    };
};

// Configure ADC1 with channels for hall effect sensing
&adc1 {

    #address-cells = <1>;
    #size-cells = <0>;
    status = "okay";
    
    st,adc-clock-source = <ASYNC>;  // or <ASYNC>
    st,adc-prescaler = <4>;
    st,adc-sequencer = <NOT_FULLY_CONFIGURABLE>;  // or <FULLY_CONFIGURABLE>
    //st,adc-oversampler = <OVERSAMPLER_NONE>;    // or <OVERSAMPLER_MINIMAL> or <OVERSAMPLER_EXTENDED>
    
    pinctrl-0 = <&adc1_in8_pa4 &adc1_in17_pb0 &adc1_in18_pb1>;
    pinctrl-names = "default";
    
    // PA4 - ADC1_IN8
    channel@8 {
        reg = <8>;
        #io-channel-cells = <1>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
        zephyr,resolution = <12>;
    };
    
    // PB0 - ADC1_IN17  
    channel@17 {
        reg = <17>;
        #io-channel-cells = <1>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
        zephyr,resolution = <12>;
    };
    
    // PB1 - ADC1_IN18
    channel@18 {
        reg = <18>;
        #io-channel-cells = <1>;
        zephyr,gain = "ADC_GAIN_1";
        zephyr,reference = "ADC_REF_INTERNAL";
        zephyr,acquisition-time = <ADC_ACQ_TIME_DEFAULT>;
        zephyr,resolution = <12>;
    };
    
};

&pinctrl {
    // Default state - PA4 as GPIO with pull-down
    pa4_gpio: pa4-gpio {
        pinmux = <STM32_PINMUX('A', 4, GPIO)>;
        bias-pull-down;
    };
    
    // Default state - PB1 as GPIO with pull-down
    pb1_gpio: pb1-gpio {
        pinmux = <STM32_PINMUX('B', 1, GPIO)>;
        bias-pull-down;
    };
    
    // Default state - PB0 as GPIO with pull-down
    pb0_gpio: pb0-gpio {
        pinmux = <STM32_PINMUX('B', 0, GPIO)>;
        bias-pull-down;
    };
};

&usart2 {
    pinctrl-0 = <&usart2_tx_pa2 &usart2_rx_pa3>;
    pinctrl-names = "default";
    current-speed = <115200>;
    status = "okay";
};

&lpuart3 {
    pinctrl-0 = <&lpuart3_tx_pb6 &lpuart3_rx_pb7 &lpuart3_rts_pb4 &lpuart3_cts_pb5>;
    pinctrl-names = "default";
    current-speed = <115200>;
    hw-flow-control;
    status = "okay";
};

&usb {
    pinctrl-0 = <&usb_dm_pa11 &usb_dp_pa12>;
    pinctrl-names = "default";
    status = "okay";
};

&rcc {
    clock-frequency = <DT_FREQ_M(16)>;
    ahb-prescaler = <1>;
    apb1-prescaler = <1>;
};